dependencies {
	testCompile "junit:junit:4.12"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
	compile "org.codehaus.groovy:groovy-all:2.4.7"
  	compile "com.gmongo:gmongo:1.5"
}
configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.0.201605261059"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 "org.eclipse.xtext:xtext-antlr-generator:[2.1.1, 3)"
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/java/co7217/miniproject2/GenerateGraphQL.mwe2"
	inputs.file "src/main/java/co7217/miniproject2/GraphQL.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/java/co7217/miniproject2/GenerateGraphQL.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]

task compileModel(dependsOn: 'classes', type: JavaExec) {
 	main = 'co7217.miniproject2.generator.Main'
 	classpath = sourceSets.main.runtimeClasspath
 	args model
 }
 
 task migrateToMongoDb (dependsOn: 'classes', type: JavaExec) {
 	main = "miniproject2.mongoDb.BulkTransfer"
 	classpath = sourceSets.main.runtimeClasspath
 }
 
 apply plugin: 'groovy'
  
  eclipse {
  	project {
  	  buildCommand 'org.eclipse.jdt.core.javabuilder'
  	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
  	  natures 'org.eclipse.jdt.core.javanature',
  	    'org.eclipse.jdt.groovy.core.groovyNature'
  	}
  }