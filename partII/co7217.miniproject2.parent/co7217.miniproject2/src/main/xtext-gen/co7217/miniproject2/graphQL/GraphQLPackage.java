/**
 * generated by Xtext 2.12.0
 */
package co7217.miniproject2.graphQL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see co7217.miniproject2.graphQL.GraphQLFactory
 * @model kind="package"
 * @generated
 */
public interface GraphQLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "graphQL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.miniproject2.co7217/GraphQL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "graphQL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  GraphQLPackage eINSTANCE = co7217.miniproject2.graphQL.impl.GraphQLPackageImpl.init();

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.GraphQLImpl <em>Graph QL</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.GraphQLImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getGraphQL()
   * @generated
   */
  int GRAPH_QL = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPH_QL__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Graph QL</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAPH_QL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.AbstractElementImpl <em>Abstract Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.AbstractElementImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getAbstractElement()
   * @generated
   */
  int ABSTRACT_ELEMENT = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT__NAME = 0;

  /**
   * The number of structural features of the '<em>Abstract Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_ELEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.QueryImpl <em>Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.QueryImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getQuery()
   * @generated
   */
  int QUERY = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__NAME = ABSTRACT_ELEMENT__NAME;

  /**
   * The feature id for the '<em><b>Query Field</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY__QUERY_FIELD = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.QueryFieldImpl <em>Query Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.QueryFieldImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getQueryField()
   * @generated
   */
  int QUERY_FIELD = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FIELD__NAME = 0;

  /**
   * The feature id for the '<em><b>Nested Query</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FIELD__NESTED_QUERY = 1;

  /**
   * The number of structural features of the '<em>Query Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FIELD_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.TypeImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getType()
   * @generated
   */
  int TYPE = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = ABSTRACT_ELEMENT__NAME;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = ABSTRACT_ELEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.TypoImpl <em>Typo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.TypoImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getTypo()
   * @generated
   */
  int TYPO = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPO__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPO__FEATURES = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Typo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPO_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.FeatureImpl <em>Feature</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.FeatureImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getFeature()
   * @generated
   */
  int FEATURE = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Feature</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link co7217.miniproject2.graphQL.impl.ScalarImpl <em>Scalar</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see co7217.miniproject2.graphQL.impl.ScalarImpl
   * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getScalar()
   * @generated
   */
  int SCALAR = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALAR__NAME = TYPE__NAME;

  /**
   * The number of structural features of the '<em>Scalar</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALAR_FEATURE_COUNT = TYPE_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.GraphQL <em>Graph QL</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Graph QL</em>'.
   * @see co7217.miniproject2.graphQL.GraphQL
   * @generated
   */
  EClass getGraphQL();

  /**
   * Returns the meta object for the containment reference list '{@link co7217.miniproject2.graphQL.GraphQL#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see co7217.miniproject2.graphQL.GraphQL#getElements()
   * @see #getGraphQL()
   * @generated
   */
  EReference getGraphQL_Elements();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Element</em>'.
   * @see co7217.miniproject2.graphQL.AbstractElement
   * @generated
   */
  EClass getAbstractElement();

  /**
   * Returns the meta object for the attribute '{@link co7217.miniproject2.graphQL.AbstractElement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see co7217.miniproject2.graphQL.AbstractElement#getName()
   * @see #getAbstractElement()
   * @generated
   */
  EAttribute getAbstractElement_Name();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.Query <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query</em>'.
   * @see co7217.miniproject2.graphQL.Query
   * @generated
   */
  EClass getQuery();

  /**
   * Returns the meta object for the containment reference list '{@link co7217.miniproject2.graphQL.Query#getQueryField <em>Query Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Query Field</em>'.
   * @see co7217.miniproject2.graphQL.Query#getQueryField()
   * @see #getQuery()
   * @generated
   */
  EReference getQuery_QueryField();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.QueryField <em>Query Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query Field</em>'.
   * @see co7217.miniproject2.graphQL.QueryField
   * @generated
   */
  EClass getQueryField();

  /**
   * Returns the meta object for the attribute '{@link co7217.miniproject2.graphQL.QueryField#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see co7217.miniproject2.graphQL.QueryField#getName()
   * @see #getQueryField()
   * @generated
   */
  EAttribute getQueryField_Name();

  /**
   * Returns the meta object for the containment reference list '{@link co7217.miniproject2.graphQL.QueryField#getNestedQuery <em>Nested Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nested Query</em>'.
   * @see co7217.miniproject2.graphQL.QueryField#getNestedQuery()
   * @see #getQueryField()
   * @generated
   */
  EReference getQueryField_NestedQuery();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see co7217.miniproject2.graphQL.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.Typo <em>Typo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Typo</em>'.
   * @see co7217.miniproject2.graphQL.Typo
   * @generated
   */
  EClass getTypo();

  /**
   * Returns the meta object for the containment reference list '{@link co7217.miniproject2.graphQL.Typo#getFeatures <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Features</em>'.
   * @see co7217.miniproject2.graphQL.Typo#getFeatures()
   * @see #getTypo()
   * @generated
   */
  EReference getTypo_Features();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.Feature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Feature</em>'.
   * @see co7217.miniproject2.graphQL.Feature
   * @generated
   */
  EClass getFeature();

  /**
   * Returns the meta object for the attribute '{@link co7217.miniproject2.graphQL.Feature#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see co7217.miniproject2.graphQL.Feature#getName()
   * @see #getFeature()
   * @generated
   */
  EAttribute getFeature_Name();

  /**
   * Returns the meta object for the reference '{@link co7217.miniproject2.graphQL.Feature#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see co7217.miniproject2.graphQL.Feature#getType()
   * @see #getFeature()
   * @generated
   */
  EReference getFeature_Type();

  /**
   * Returns the meta object for class '{@link co7217.miniproject2.graphQL.Scalar <em>Scalar</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Scalar</em>'.
   * @see co7217.miniproject2.graphQL.Scalar
   * @generated
   */
  EClass getScalar();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  GraphQLFactory getGraphQLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.GraphQLImpl <em>Graph QL</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.GraphQLImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getGraphQL()
     * @generated
     */
    EClass GRAPH_QL = eINSTANCE.getGraphQL();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAPH_QL__ELEMENTS = eINSTANCE.getGraphQL_Elements();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.AbstractElementImpl <em>Abstract Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.AbstractElementImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getAbstractElement()
     * @generated
     */
    EClass ABSTRACT_ELEMENT = eINSTANCE.getAbstractElement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ABSTRACT_ELEMENT__NAME = eINSTANCE.getAbstractElement_Name();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.QueryImpl <em>Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.QueryImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getQuery()
     * @generated
     */
    EClass QUERY = eINSTANCE.getQuery();

    /**
     * The meta object literal for the '<em><b>Query Field</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY__QUERY_FIELD = eINSTANCE.getQuery_QueryField();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.QueryFieldImpl <em>Query Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.QueryFieldImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getQueryField()
     * @generated
     */
    EClass QUERY_FIELD = eINSTANCE.getQueryField();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute QUERY_FIELD__NAME = eINSTANCE.getQueryField_Name();

    /**
     * The meta object literal for the '<em><b>Nested Query</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference QUERY_FIELD__NESTED_QUERY = eINSTANCE.getQueryField_NestedQuery();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.TypeImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.TypoImpl <em>Typo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.TypoImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getTypo()
     * @generated
     */
    EClass TYPO = eINSTANCE.getTypo();

    /**
     * The meta object literal for the '<em><b>Features</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPO__FEATURES = eINSTANCE.getTypo_Features();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.FeatureImpl <em>Feature</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.FeatureImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getFeature()
     * @generated
     */
    EClass FEATURE = eINSTANCE.getFeature();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FEATURE__NAME = eINSTANCE.getFeature_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FEATURE__TYPE = eINSTANCE.getFeature_Type();

    /**
     * The meta object literal for the '{@link co7217.miniproject2.graphQL.impl.ScalarImpl <em>Scalar</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see co7217.miniproject2.graphQL.impl.ScalarImpl
     * @see co7217.miniproject2.graphQL.impl.GraphQLPackageImpl#getScalar()
     * @generated
     */
    EClass SCALAR = eINSTANCE.getScalar();

  }

} //GraphQLPackage
