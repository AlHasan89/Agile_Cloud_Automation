/*
 * generated by Xtext 2.12.0
 */
grammar InternalGraphQL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package co7217.miniproject2.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package co7217.miniproject2.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import co7217.miniproject2.services.GraphQLGrammarAccess;

}
@parser::members {
	private GraphQLGrammarAccess grammarAccess;

	public void setGrammarAccess(GraphQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGraphQL
entryRuleGraphQL
:
{ before(grammarAccess.getGraphQLRule()); }
	 ruleGraphQL
{ after(grammarAccess.getGraphQLRule()); } 
	 EOF 
;

// Rule GraphQL
ruleGraphQL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphQLAccess().getElementsAssignment()); }
		(rule__GraphQL__ElementsAssignment)*
		{ after(grammarAccess.getGraphQLAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuery
entryRuleQuery
:
{ before(grammarAccess.getQueryRule()); }
	 ruleQuery
{ after(grammarAccess.getQueryRule()); } 
	 EOF 
;

// Rule Query
ruleQuery 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryAccess().getGroup()); }
		(rule__Query__Group__0)
		{ after(grammarAccess.getQueryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueryField
entryRuleQueryField
:
{ before(grammarAccess.getQueryFieldRule()); }
	 ruleQueryField
{ after(grammarAccess.getQueryFieldRule()); } 
	 EOF 
;

// Rule QueryField
ruleQueryField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryFieldAccess().getGroup()); }
		(rule__QueryField__Group__0)
		{ after(grammarAccess.getQueryFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypo
entryRuleTypo
:
{ before(grammarAccess.getTypoRule()); }
	 ruleTypo
{ after(grammarAccess.getTypoRule()); } 
	 EOF 
;

// Rule Typo
ruleTypo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypoAccess().getGroup()); }
		(rule__Typo__Group__0)
		{ after(grammarAccess.getTypoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
		(rule__Feature__Alternatives)
		{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalar
entryRuleScalar
:
{ before(grammarAccess.getScalarRule()); }
	 ruleScalar
{ after(grammarAccess.getScalarRule()); } 
	 EOF 
;

// Rule Scalar
ruleScalar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarAccess().getGroup()); }
		(rule__Scalar__Group__0)
		{ after(grammarAccess.getScalarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getQueryParserRuleCall_1()); }
		ruleQuery
		{ after(grammarAccess.getAbstractElementAccess().getQueryParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getScalarParserRuleCall_0()); }
		ruleScalar
		{ after(grammarAccess.getTypeAccess().getScalarParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypoParserRuleCall_1()); }
		ruleTypo
		{ after(grammarAccess.getTypeAccess().getTypoParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup_0()); }
		(rule__Feature__Group_0__0)
		{ after(grammarAccess.getFeatureAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureAccess().getGroup_1()); }
		(rule__Feature__Group_1__0)
		{ after(grammarAccess.getFeatureAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__0__Impl
	rule__Query__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getQueryKeyword_0()); }
	'query'
	{ after(grammarAccess.getQueryAccess().getQueryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__1__Impl
	rule__Query__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getNameAssignment_1()); }
	(rule__Query__NameAssignment_1)
	{ after(grammarAccess.getQueryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__2__Impl
	rule__Query__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getQueryAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__3__Impl
	rule__Query__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getQueryAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__4__Impl
	rule__Query__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__5__Impl
	rule__Query__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQueryAccess().getQueryFieldAssignment_5()); }
		(rule__Query__QueryFieldAssignment_5)
		{ after(grammarAccess.getQueryAccess().getQueryFieldAssignment_5()); }
	)
	(
		{ before(grammarAccess.getQueryAccess().getQueryFieldAssignment_5()); }
		(rule__Query__QueryFieldAssignment_5)*
		{ after(grammarAccess.getQueryAccess().getQueryFieldAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Query__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryField__Group__0__Impl
	rule__QueryField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFieldAccess().getNameAssignment_0()); }
	(rule__QueryField__NameAssignment_0)
	{ after(grammarAccess.getQueryFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFieldAccess().getGroup_1()); }
	(rule__QueryField__Group_1__0)?
	{ after(grammarAccess.getQueryFieldAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryField__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryField__Group_1__0__Impl
	rule__QueryField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFieldAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getQueryFieldAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryField__Group_1__1__Impl
	rule__QueryField__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQueryFieldAccess().getNestedQueryAssignment_1_1()); }
		(rule__QueryField__NestedQueryAssignment_1_1)
		{ after(grammarAccess.getQueryFieldAccess().getNestedQueryAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getQueryFieldAccess().getNestedQueryAssignment_1_1()); }
		(rule__QueryField__NestedQueryAssignment_1_1)*
		{ after(grammarAccess.getQueryFieldAccess().getNestedQueryAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryField__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFieldAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getQueryFieldAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typo__Group__0__Impl
	rule__Typo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypoAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypoAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typo__Group__1__Impl
	rule__Typo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypoAccess().getNameAssignment_1()); }
	(rule__Typo__NameAssignment_1)
	{ after(grammarAccess.getTypoAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typo__Group__2__Impl
	rule__Typo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypoAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTypoAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typo__Group__3__Impl
	rule__Typo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTypoAccess().getFeaturesAssignment_3()); }
		(rule__Typo__FeaturesAssignment_3)
		{ after(grammarAccess.getTypoAccess().getFeaturesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getTypoAccess().getFeaturesAssignment_3()); }
		(rule__Typo__FeaturesAssignment_3)*
		{ after(grammarAccess.getTypoAccess().getFeaturesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typo__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypoAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTypoAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_0__0__Impl
	rule__Feature__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_0_0()); }
	(rule__Feature__NameAssignment_0_0)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_0__1__Impl
	rule__Feature__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getFeatureAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_0__2__Impl
	rule__Feature__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getTypeAssignment_0_2()); }
	(rule__Feature__TypeAssignment_0_2)
	{ after(grammarAccess.getFeatureAccess().getTypeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getExclamationMarkKeyword_0_3()); }
	('!')?
	{ after(grammarAccess.getFeatureAccess().getExclamationMarkKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__0__Impl
	rule__Feature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_1_0()); }
	(rule__Feature__NameAssignment_1_0)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__1__Impl
	rule__Feature__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getFeatureAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__2__Impl
	rule__Feature__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getFeatureAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__3__Impl
	rule__Feature__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getTypeAssignment_1_3()); }
	(rule__Feature__TypeAssignment_1_3)
	{ after(grammarAccess.getFeatureAccess().getTypeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__4__Impl
	rule__Feature__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getExclamationMarkKeyword_1_4()); }
	('!')?
	{ after(grammarAccess.getFeatureAccess().getExclamationMarkKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__5__Impl
	rule__Feature__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getRightSquareBracketKeyword_1_5()); }
	']'
	{ after(grammarAccess.getFeatureAccess().getRightSquareBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getExclamationMarkKeyword_1_6()); }
	('!')?
	{ after(grammarAccess.getFeatureAccess().getExclamationMarkKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scalar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__0__Impl
	rule__Scalar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getScalarKeyword_0()); }
	'scalar'
	{ after(grammarAccess.getScalarAccess().getScalarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scalar__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarAccess().getNameAssignment_1()); }
	(rule__Scalar__NameAssignment_1)
	{ after(grammarAccess.getScalarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphQL__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphQLAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getGraphQLAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Query__QueryFieldAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryAccess().getQueryFieldQueryFieldParserRuleCall_5_0()); }
		ruleQueryField
		{ after(grammarAccess.getQueryAccess().getQueryFieldQueryFieldParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryFieldAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getQueryFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryField__NestedQueryAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryFieldAccess().getNestedQueryQueryFieldParserRuleCall_1_1_0()); }
		ruleQueryField
		{ after(grammarAccess.getQueryFieldAccess().getNestedQueryQueryFieldParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypoAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypoAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typo__FeaturesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypoAccess().getFeaturesFeatureParserRuleCall_3_0()); }
		ruleFeature
		{ after(grammarAccess.getTypoAccess().getFeaturesFeatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__TypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getTypeTypeCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getTypeTypeIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFeatureAccess().getTypeTypeIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getFeatureAccess().getTypeTypeCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__TypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getTypeTypeCrossReference_1_3_0()); }
		(
			{ before(grammarAccess.getFeatureAccess().getTypeTypeIDTerminalRuleCall_1_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFeatureAccess().getTypeTypeIDTerminalRuleCall_1_3_0_1()); }
		)
		{ after(grammarAccess.getFeatureAccess().getTypeTypeCrossReference_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scalar__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScalarAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
